const STORAGE_KEYS={time:'sys_cache_time',password:'sys_login_pwd',userData:'sys_user_data',style:'sys_style_css'};const FILE_PATHS={time:'time.txt',code:'code.txt',data:'data.txt',style:'style.css'};const loginSection=document.getElementById('loginSection');const dataSection=document.getElementById('dataSection');const passwordInput=document.getElementById('passwordInput');const loginBtn=document.getElementById('loginBtn');const errorTip=document.getElementById('errorTip');const cacheStatus=document.getElementById('cacheStatus');const dataLoading=document.getElementById('dataLoading');const dataTable=document.querySelector('.data-table');const dataTableBody=document.getElementById('dataTableBody');const accessDeniedMsg=document.createElement('div');accessDeniedMsg.className='error-tip';accessDeniedMsg.style.display='none';loginSection.appendChild(accessDeniedMsg);window.onload=async function(){await checkAndHandleCache()};async function checkAndHandleCache(){try{const latestTime=await fetchFileContent(FILE_PATHS.time,true);const cleanLatestTime=latestTime.trim();const localTime=localStorage.getItem(STORAGE_KEYS.time);if(!cleanLatestTime){throw new Error('校验码为空');}if(cleanLatestTime!==localTime){cacheStatus.textContent='校验失败，正在更新数据...';localStorage.removeItem(STORAGE_KEYS.time);localStorage.removeItem(STORAGE_KEYS.password);localStorage.removeItem(STORAGE_KEYS.userData);localStorage.removeItem(STORAGE_KEYS.style);await reloadAllFilesAndCache(cleanLatestTime)}else{cacheStatus.textContent='校验成功，使用本地缓存';const localPwd=localStorage.getItem(STORAGE_KEYS.password);const localUserData=localStorage.getItem(STORAGE_KEYS.userData);const localStyle=localStorage.getItem(STORAGE_KEYS.style);if(!localPwd||!localUserData||!localStyle){throw new Error('本地缓存不完整');}applyCachedStyle(localStyle);initLogin(localPwd)}passwordInput.disabled=false;loginBtn.disabled=false}catch(error){cacheStatus.textContent='校验失败';showAccessDenied(error.message);passwordInput.disabled=true;loginBtn.disabled=true}}async function reloadAllFilesAndCache(latestTime){try{const[codeContent,dataContent,styleContent]=await Promise.all([fetchFileContent(FILE_PATHS.code,true),fetchFileContent(FILE_PATHS.data,true),fetchFileContent(FILE_PATHS.style,true)]);const cleanPwd=codeContent.trim();const cleanUserData=dataContent.trim();const cleanStyle=styleContent.trim();if(!cleanPwd||!cleanUserData||!cleanStyle){throw new Error('文件内容为空');}localStorage.setItem(STORAGE_KEYS.time,latestTime);localStorage.setItem(STORAGE_KEYS.password,cleanPwd);localStorage.setItem(STORAGE_KEYS.userData,cleanUserData);localStorage.setItem(STORAGE_KEYS.style,cleanStyle);applyCachedStyle(cleanStyle);initLogin(cleanPwd)}catch(error){throw new Error(`更新失败：${error.message}`)}}function fetchFileContent(filePath,forceRefresh=false){let url=filePath;if(forceRefresh){const timestamp=new Date().getTime();url=`${filePath}?t=${timestamp}`}return fetch(url).then(response=>{if(!response.ok){throw new Error(`HTTP错误，状态码：${response.status}`)}return response.text()})}function applyCachedStyle(cssContent){const existingLink=document.querySelector('link[href="style.css"]');if(existingLink){existingLink.remove()}const existingStyle=document.querySelector('style[data-cached="true"]');if(existingStyle){existingStyle.remove()}const styleElement=document.createElement('style');styleElement.setAttribute('data-cached','true');styleElement.textContent=cssContent;document.head.appendChild(styleElement)}function initLogin(validPwd){window.validLoginPassword=validPwd}loginBtn.addEventListener('click',function(){const inputPwd=passwordInput.value.trim();if(!inputPwd){showError('请输入登录密码');return}if(inputPwd===window.validLoginPassword){loginSection.style.display='none';dataSection.style.display='block';renderUserData()}else{showError('密码错误，请重新输入')}});function renderUserData(){try{const userDataText=localStorage.getItem(STORAGE_KEYS.userData);if(!userDataText){throw new Error('人员数据缓存缺失');}const userList=parseUserData(userDataText);dataTableBody.innerHTML='';if(userList.length===0){dataTableBody.innerHTML='<tr><td colspan="3" style="text-align:center;">无人员数据</td></tr>'}else{userList.forEach(user=>{const tr=document.createElement('tr');tr.innerHTML=`<td>${user.department}</td><td>${user.name}</td><td><a href="tel:${user.phone}"class="phone-link">${user.phone}</a></td>`;dataTableBody.appendChild(tr)})}dataLoading.style.display='none';dataTable.style.display='table'}catch(error){dataLoading.textContent=`数据渲染失败：${error.message}`}}function parseUserData(dataText){const lines=dataText.split('\n');const userList=[];lines.forEach(line=>{const trimmedLine=line.trim();if(!trimmedLine)return;const parts=trimmedLine.split('-');if(parts.length>=3){const phone=parts.pop().trim();const name=parts.pop().trim();const department=parts.join('-').trim();userList.push({department,name,phone})}});return userList}function showError(message){errorTip.textContent=message;errorTip.style.display='block';passwordInput.value='';setTimeout(()=>{errorTip.style.display='none'},3000)}function showAccessDenied(message){accessDeniedMsg.textContent=message;accessDeniedMsg.style.display='block'}passwordInput.addEventListener('keydown',function(e){if(e.key==='Enter'&&!loginBtn.disabled){loginBtn.click()}});